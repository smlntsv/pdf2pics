diff --git a/node_modules/pdfjs-dist/build/pdf.mjs b/node_modules/pdfjs-dist/build/pdf.mjs
index f3f03fa..3a8b41f 100644
--- a/node_modules/pdfjs-dist/build/pdf.mjs
+++ b/node_modules/pdfjs-dist/build/pdf.mjs
@@ -4922,9 +4922,7 @@ class PrintAnnotationStorage extends AnnotationStorage {
       hash,
       transfer
     } = parent.serializable;
-    const clone = structuredClone(map, transfer ? {
-      transfer
-    } : null);
+    const clone = structuredClone(map);
     this.#serializable = {
       map: clone,
       hash,
@@ -11981,12 +11979,32 @@ class PDFPageProxy {
 class LoopbackPort {
   #listeners = new Map();
   #deferred = Promise.resolve();
+
   postMessage(obj, transfer) {
-    const event = {
-      data: structuredClone(obj, transfer ? {
-        transfer
-      } : null)
-    };
+    let event
+    if (
+        obj['action'] === 'configure' ||
+        obj['action'] === 'GetDocRequest' ||
+        obj['action'] === 'DataLoaded' ||
+        obj['action'] === 'GetDoc' ||
+        obj['action'] === 'Ready' ||
+        obj['action'] === 'GetPage' ||
+        obj['action'] === 'GetOptionalContentConfig' ||
+        obj['action'] === 'GetOperatorList' ||
+        obj['action'] === 'obj' ||
+        obj['action'] === 'StartRenderPage' ||
+        obj['action'] === 'commonobj' ||
+        obj['action'] === 'FontFallback'
+    ) {
+      event = {
+        data: obj
+      }
+    } else {
+      event = {
+        data: structuredClone(obj)
+      }
+    }
+
     this.#deferred.then(() => {
       for (const [listener] of this.#listeners) {
         listener.call(this, event);
